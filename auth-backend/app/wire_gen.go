// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"auth-backend/app/controller"
	"auth-backend/app/repository"
	"auth-backend/app/service"
	"auth-backend/config"
	"github.com/google/wire"
)

// Injectors from wire.go:

func BuildInjector() (*config.Injector, func(), error) {
	gormDB := config.ConnectToDB()
	userRepositoryImpl := repository.UserRepositoryInit(gormDB)
	userServiceImpl := &service.UserServiceImpl{
		UserRepository: userRepositoryImpl,
	}
	userControllerImpl := &controller.UserControllerImpl{
		UserService: userServiceImpl,
	}
	departmentRepositoryImpl := repository.DepartmentRepositoryInit(gormDB)
	departmentServiceImpl := &service.DepartmentServiceImpl{
		DepartmentRepository: departmentRepositoryImpl,
	}
	departmentControllerImpl := &controller.DepartmentControllerImpl{
		DepartmentService: departmentServiceImpl,
	}
	permissionRepositoryImpl := repository.PermissionRepositoryInit(gormDB)
	permissionServiceImpl := &service.PermissionServiceImpl{
		PermissionRepository: permissionRepositoryImpl,
	}
	permissionControllerImpl := &controller.PermissionControllerImpl{
		PermissionService: permissionServiceImpl,
	}
	injector := &config.Injector{
		DB:             gormDB,
		UserCtrl:       userControllerImpl,
		DepartmentCtrl: departmentControllerImpl,
		PermissionCtrl: permissionControllerImpl,
	}
	return injector, func() {
	}, nil
}

// wire.go:

var db = wire.NewSet(config.ConnectToDB)

var InjectorSet = wire.NewSet(wire.Struct(new(config.Injector), "*"))
