apiVersion: apps/v1
kind: Deployment
metadata:
  name: planner-backend-db
  namespace: timeplanner
spec:
  replicas: 1
  selector:
    matchLabels:
      app: planner-backend-db
  template:
    metadata:
      labels:
        app: planner-backend-db
        tier: backend
    spec:
      # set the user and group for the container
      initContainers:
        - name: init-chmod
          image: busybox
          command: ["sh", "-c", "chmod -R 777 /data"]
          volumeMounts:
            - name: planner-backend-db
              mountPath: /data
      containers:
        - name: planner-backend-db
          image: neo4j:5-community
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 7687
          envFrom:
            - secretRef:
                name: secrets
          securityContext:
            allowPrivilegeEscalation: false
          resources:
            limits:
              memory: "2Gi"
            requests:
              memory: "2Gi"
          volumeMounts:
            - name: planner-backend-db
              mountPath: /data
              readOnly: false
          livenessProbe:
            tcpSocket:
              port: 7687
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 10
          readinessProbe:
            tcpSocket:
              port: 7687
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 10
      volumes:
        - name: planner-backend-db
          persistentVolumeClaim:
            claimName: planner-backend-db-pvc
            readOnly: false
